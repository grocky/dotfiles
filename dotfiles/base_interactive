# vim: set ft=sh

if [ -n "${BASH}" ]; then
    shell="bash"
    shell_extension="sh"
elif [ -n "${ZSH_NAME}" ]; then
    shell="zsh"
    shell_extension="zsh"
else
    shell=$(echo ${SHELL} | awk -F/ '{ print $NF }')
fi

## Setup vim mode
if [ -n "${BASH}" ]; then
  set -o vi
elif [ -n "${ZSH_NAME}" ]; then
  bindkey -v
fi

## Use vim as editor, but don't load entire configuration
export PAGER=less
export VISUAL=vim
export EDITOR="${VISUAL} -u NONE"

[ -f "${HOME}/.bash_aliases" ] && source "${HOME}/.bash_aliases"

[ -f "${HOME}/.bash_functions" ] && source "${HOME}/.bash_functions"

[ -f "${HOME}/.dirs" ] && source "${HOME}/.dirs"

[ -f "${HOME}/.aws_helpers" ] && source "${HOME}/.aws_helpers"

if [ -n "${BASH}" ]; then
  [ -f "${HOME}/.bash_completions" ] && source "${HOME}/.bash_completions"
elif [ -n "${ZSH_NAME}" ]; then
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

  autoload -Uz compinit && compinit
fi

## GPG
export GPG_TTY=$(tty)

brew_prefix=$(brew --prefix)

## j
[ -f ${brew_prefix}/etc/profile.d/autojump.sh ] && . ${brew_prefix}/etc/profile.d/autojump.sh

## FZF

command -v ag > /dev/null 2>&1 && export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'
[ -f ~/.fzf.${shell} ] && source ~/.fzf.${shell}
export PATH="/usr/local/opt/mysql-client/bin:$PATH"

source "${HOME}/.java_environment"

## nvm
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

## powerline-go
function powerline_precmd() {
    PS1="$($GOPATH/bin/powerline-go -error $? -jobs ${${(%):%j}:-0})"

    # Uncomment the following line to automatically clear errors after showing
    # them once. This not only clears the error for powerline-go, but also for
    # everything else you run in that shell. Don't enable this if you're not
    # sure this is what you want.

    #set "?"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ] && [ -f "$GOPATH/bin/powerline-go" ]; then
    install_powerline_precmd
fi
