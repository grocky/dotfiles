# set the command prefix to `
# 256 colors for vim
set -g default-terminal "screen-256color"

set -g set-titles on
set -g set-titles-string '#(whoami)::#h::#(dig +short myip.opendns.com @resolver1.opendns.com)'

# powerline
if-shell -b 'hash powerline-daemon 2>/dev/null' \
  "run-shell 'powerline-daemon -q'"

if-shell -b 'hash powerline-daemon 2>/dev/null && [ -e /usr/local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf ]' \
  "source '/usr/local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf'"

set -g prefix "`"
bind-key "`" send-prefix

set-option -g status-keys vi
set-window-option -g mode-keys vi         # use vim keybindings in copy mode
set-window-option -g automatic-rename on  # Autorename sanely
set-option -g repeat-time 1               # Allow the arrow key to be used immediately after changing windows

# Allow `open` command to work in tmux session
set-option -g default-command $SHELL      # set default shell
set-option -g default-shell $SHELL

# Change cursor in vim to distinguish between insert and command mode
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

# Start window numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Scroll history
set -g history-limit 100000

# ========== Keybindings

bind r source-file ~/.tmux.conf \; display "tmux.conf reloaded!"

# clear screen
bind-key k send-keys -R \; clear-history

# quickly resize panes
bind-key -n C-S-Up resize-pane -U 10
bind-key -n C-S-Down resize-pane -D 10
bind-key -n C-S-Left resize-pane -L 10
bind-key -n C-S-Right resize-pane -R 10

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    bind-key -T copy-mode-vi C-\ select-pane -l

# based on https://stackoverflow.com/a/40902312/1046584
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | tr -dc "[0-9.]")'

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# Setup 'v' to begin selection as in Vim
# New keybindings for vi-mode
# https://github.com/tmux/tmux/issues/754
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
   'bind -T copy-mode-vi v send-keys -X begin-selection ; \
   bind -T copy-mode-vi C-v send-keys -X rectangle-toggle ; \
   bind -T copy-mode-vi y send-keys -X copy-selection ; \
   bind -T copy-mode-vi H send-keys -X start-of-line ; \
   bind -T copy-mode-vi L send-keys -X end-of-line ; \
   bind -T choice-mode-vi h send-keys -X tree-collapse ; \
   bind -T choice-mode-vi l send-keys -X tree-expand ; \
   bind -T choice-mode-vi H send-keys -X tree-collapse-all ; \
   bind -T choice-mode-vi L send-keys -X tree-expand-all ; \
   bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"; \
   bind -T copy-mode-emacs MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"; \
   bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"; ' \
   'bind -t vi-copy v begin-selection; \
   bind -t vi-copy C-v rectangle-toggle; \
   bind -t vi-copy y copy-selection; \
   bind -t vi-choice h tree-collapse; \
   bind -t vi-choice l tree-expand; \
   bind -t vi-choice H tree-collapse-all; \
   bind -t vi-choice L tree-expand-all; \
   bind -t vi-copy y copy-pipe "pbcopy"; \
   bind -t emacs-copy MouseDragEnd1Pane copy-pipe "pbcopy"; \
   bind -t vi-copy MouseDragEnd1Pane copy-pipe "pbcopy"; '
