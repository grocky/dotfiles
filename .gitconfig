[user]
	name = Rocky Gray
	email = rocky.grayjr@gmail.com

[diff "pdfconv"]
textconv=pdftohtml -stdout
[color]
	ui = true
[alias]
	# List commits in short form, with colors and branch/tag annotations
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	# List commits showing changed files 
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	# List with no colors if you need to chain the out put with Unix pipes
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	# List oneline commits showing dates:
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	# List oneline commits showing relative dates
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	# short git log
	le = log --oneline --decorate
	# file log
	filelog = log -u 
	fl = log -u
	# Show modified files in last commit:
	dl = "!git ll -1"
	# Show a diff last commit:
	dlc = diff --cached HEAD^
	# list your aliases
	la = "!git config -l | grep alias | cut -c 7-"
	# Show content (full diff) of a commit given a revision:
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"
	# Find a file path in codebase
	f = "!git ls-files | grep -i"
	# Search/grep your entire codebase for a string
	grep = grep -Ii
	gr = grep -Ii
	# Grep from root folder
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	# Rename [branch] to done-[branch]
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	# Essentials
	cp = cherry-pick
	st = status -s
	cl = clone
	ci = commit
	co = checkout
	br = branch 
    diff = diff --word-diff
    wdiff = diff --color-words
	dc = diff --cached
	# Reset
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard
	# Stash
	sl = stash list
	sa = stash apply
	ss = stash save
	logtree = log --graph --oneline --decorate --all

[init]
	templatedir = ~/.git_template
[push]
    default = tracking

